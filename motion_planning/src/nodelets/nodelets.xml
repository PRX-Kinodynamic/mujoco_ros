<library path="lib/libmotion_planning_nodelets">
  <class 
      name="motion_planning/MotionPlanningTree" 
      type="motion_planning::MotionPlanningTree" 
      base_class_type="nodelet::Nodelet">
    <description> 
      Nodelet managing a tree
    </description>
  </class>

  <class 
      name="motion_planning/MotionPlanningTreeVizPublisher" 
      type="motion_planning::MotionPlanningTreeVizPublisher" 
      base_class_type="nodelet::Nodelet">
    <description> 
      Nodelet managing a tree
    </description>
  </class>

  <class 
      name="motion_planning/DirtPublisher" 
      type="motion_planning::DirtPublisher" 
      base_class_type="nodelet::Nodelet">
    <description> 
      Dirt motion planner tree
    </description>
  </class>

  <class 
      name="motion_planning/RRTPublisher" 
      type="motion_planning::RRTPublisher" 
      base_class_type="nodelet::Nodelet">
    <description> 
      RRT motion planner tree
    </description>
  </class>

  <class 
      name="motion_planning/AORRTPublisher" 
      type="motion_planning::AORRTPublisher" 
      base_class_type="nodelet::Nodelet">
    <description> 
      AORRT motion planner tree
    </description>
  </class>
  
  <class 
      name="motion_planning/TreeToTrajectories" 
      type="motion_planning::TreeToTrajectories" 
      base_class_type="nodelet::Nodelet">
    <description> 
      Get the trajectories from a tree
    </description>
  </class>
  <class 
      name="motion_planning/StelaLtvSde" 
      type="motion_planning::StelaLtvSde" 
      base_class_type="nodelet::Nodelet">
    <description> 
      Get the trajectories from a tree
    </description>
  </class>
  <class 
      name="motion_planning/StelaStepper" 
      type="motion_planning::StelaStepper" 
      base_class_type="nodelet::Nodelet">
    <description> 
      Get the trajectories from a tree
    </description>
  </class>
  <class 
      name="motion_planning/BranchSelector" 
      type="motion_planning::BranchSelector" 
      base_class_type="nodelet::Nodelet">
    <description> 
      Get the a trajectory (branch) from a tree
    </description>
  </class>
  <class 
      name="motion_planning/LtvPositionController" 
      type="motion_planning::LtvPositionController" 
      base_class_type="nodelet::Nodelet">
    <description> 
      Ltv Position Controller
    </description>
  </class>
  <class 
      name="motion_planning/MushrTrajectoryEstimation" 
      type="motion_planning::MushrTrajectoryEstimation" 
      base_class_type="nodelet::Nodelet">
    <description> 
      Mushr trajectory estimation
    </description>
  </class>
  
</library>